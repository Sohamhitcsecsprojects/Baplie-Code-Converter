{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","file","setFile","useState","vesselName","setVesselName","senderName","setSenderName","receiverName","setReceiverName","baplieData","setBaplieData","React","createElement","className","ToastContainer","onSubmit","async","e","preventDefault","toast","error","formData","FormData","append","response","axios","post","headers","data","baplie","success","console","type","onChange","target","files","accept","value","placeholder","onClick","handleDownload","window","open","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getLCP","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wRAuGeA,MAjGf,WACE,MAAOC,EAAMC,GAAWC,mBAAS,OAC1BC,EAAYC,GAAiBF,mBAAS,KACtCG,EAAYC,GAAiBJ,mBAAS,KACtCK,EAAcC,GAAmBN,mBAAS,KAC1CO,EAAYC,GAAiBR,mBAAS,IAuC7C,OACES,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACE,IAAc,MACfH,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,QAAMG,SAtCSC,UAGnB,GAFAC,EAAEC,kBAEGlB,IAASG,IAAeE,IAAeE,EAE1C,YADAY,IAAMC,MAAM,gDAId,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQvB,GACxBqB,EAASE,OAAO,aAAcpB,GAC9BkB,EAASE,OAAO,aAAclB,GAC9BgB,EAASE,OAAO,eAAgBhB,GAEhC,IACE,MAAMiB,QAAiBC,IAAMC,KAAK,+BAAgCL,EAAU,CAC1EM,QAAS,CACP,eAAgB,yBAIpBjB,EAAcc,EAASI,KAAKC,QAC5BV,IAAMW,QAAQ,+BACd,MAAOV,GACPW,QAAQX,MAAMA,GACdD,IAAMC,MAAM,6BAcRT,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,aAAO,qBACPD,IAAAC,cAAA,SAAOoB,KAAK,OAAOC,SA7CHhB,IACxBhB,EAAQgB,EAAEiB,OAAOC,MAAM,KA4CgCC,OAAO,WAExDzB,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,aAAO,eACPD,IAAAC,cAAA,SACEoB,KAAK,OACLK,MAAOlC,EACP8B,SAAWhB,GAAMb,EAAca,EAAEiB,OAAOG,OACxCC,YAAY,uBAGhB3B,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,aAAO,eACPD,IAAAC,cAAA,SACEoB,KAAK,OACLK,MAAOhC,EACP4B,SAAWhB,GAAMX,EAAcW,EAAEiB,OAAOG,OACxCC,YAAY,uBAGhB3B,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,aAAO,iBACPD,IAAAC,cAAA,SACEoB,KAAK,OACLK,MAAO9B,EACP0B,SAAWhB,GAAMT,EAAgBS,EAAEiB,OAAOG,OAC1CC,YAAY,yBAGhB3B,IAAAC,cAAA,UAAQoB,KAAK,SAASnB,UAAU,OAAM,sBAEvCJ,GACCE,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,WAAMH,GACNE,IAAAC,cAAA,UAAQ2B,QA/CKC,KACrBC,OAAOC,KAAK,iCAAkC,WA8CL7B,UAAU,gBAAe,4B,MCjFvD8B,MAVUC,IACnBA,GAAeA,aAAuBC,UACxC,wCAAqBC,KAAKC,IAAiC,IAAhC,OAAEC,EAAM,OAAEC,EAAM,OAAEC,GAAQH,EACnDC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,MCDAO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5C,IAAAC,cAACD,IAAM6C,WAAU,KACf7C,IAAAC,cAACb,EAAG,QAOR4C,M","file":"static/js/main.014c6f6f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\"; // Named imports\nimport \"react-toastify/dist/ReactToastify.css\";         // Import CSS for styling\nimport \"./App.css\";\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [vesselName, setVesselName] = useState(\"\");\n  const [senderName, setSenderName] = useState(\"\");\n  const [receiverName, setReceiverName] = useState(\"\");\n  const [baplieData, setBaplieData] = useState(\"\");\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!file || !vesselName || !senderName || !receiverName) {\n      toast.error(\"Please fill in all fields and upload a file!\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"vesselName\", vesselName);\n    formData.append(\"senderName\", senderName);\n    formData.append(\"receiverName\", receiverName);\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      setBaplieData(response.data.baplie);\n      toast.success(\"File uploaded successfully!\");\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Failed to upload file!\");\n    }\n  };\n\n  const handleDownload = () => {\n    window.open(\"http://localhost:5000/download\", \"_blank\");\n  };\n\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <div className=\"container\">\n        <h1>Generate BAPLIE</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Upload Excel File</label>\n            <input type=\"file\" onChange={handleFileChange} accept=\".xlsx\" />\n          </div>\n          <div className=\"form-group\">\n            <label>Vessel Name</label>\n            <input\n              type=\"text\"\n              value={vesselName}\n              onChange={(e) => setVesselName(e.target.value)}\n              placeholder=\"Enter vessel name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Sender Name</label>\n            <input\n              type=\"text\"\n              value={senderName}\n              onChange={(e) => setSenderName(e.target.value)}\n              placeholder=\"Enter sender name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Receiver Name</label>\n            <input\n              type=\"text\"\n              value={receiverName}\n              onChange={(e) => setReceiverName(e.target.value)}\n              placeholder=\"Enter receiver name\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn\">Upload & Generate</button>\n        </form>\n        {baplieData && (\n          <div className=\"result\">\n            <h2>Generated BAPLIE</h2>\n            <pre>{baplieData}</pre>\n            <button onClick={handleDownload} className=\"btn download\">\n              Download Output File\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { getCLS, getFID, getLCP } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getLCP }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getLCP(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"ast":null,"code":"import React,{useState}from\"react\";import axios from\"axios\";import{ToastContainer,toast}from\"react-toastify\";// Named imports\nimport\"react-toastify/dist/ReactToastify.css\";// Import CSS for styling\nimport\"./App.css\";function App(){const[file,setFile]=useState(null);const[vesselName,setVesselName]=useState(\"\");const[senderName,setSenderName]=useState(\"\");const[receiverName,setReceiverName]=useState(\"\");const[baplieData,setBaplieData]=useState(\"\");const handleFileChange=e=>{setFile(e.target.files[0]);};const handleSubmit=async e=>{e.preventDefault();if(!file||!vesselName||!senderName||!receiverName){toast.error(\"Please fill in all fields and upload a file!\");return;}const formData=new FormData();formData.append(\"file\",file);formData.append(\"vesselName\",vesselName);formData.append(\"senderName\",senderName);formData.append(\"receiverName\",receiverName);try{const response=await axios.post(\"http://localhost:5000/upload\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});setBaplieData(response.data.baplie);toast.success(\"File uploaded successfully!\");}catch(error){console.error(error);toast.error(\"Failed to upload file!\");}};const handleDownload=()=>{window.open(\"http://localhost:5000/download\",\"_blank\");};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(ToastContainer,null),/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Generate BAPLIE\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Upload Excel File\"),/*#__PURE__*/React.createElement(\"input\",{type:\"file\",onChange:handleFileChange,accept:\".xlsx\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Vessel Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:vesselName,onChange:e=>setVesselName(e.target.value),placeholder:\"Enter vessel name\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Sender Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:senderName,onChange:e=>setSenderName(e.target.value),placeholder:\"Enter sender name\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Receiver Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:receiverName,onChange:e=>setReceiverName(e.target.value),placeholder:\"Enter receiver name\"})),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn\"},\"Upload & Generate\")),baplieData&&/*#__PURE__*/React.createElement(\"div\",{className:\"result\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Generated BAPLIE\"),/*#__PURE__*/React.createElement(\"pre\",null,baplieData),/*#__PURE__*/React.createElement(\"button\",{onClick:handleDownload,className:\"btn download\"},\"Download Output File\"))));}export default App;","map":{"version":3,"names":["React","useState","axios","ToastContainer","toast","App","file","setFile","vesselName","setVesselName","senderName","setSenderName","receiverName","setReceiverName","baplieData","setBaplieData","handleFileChange","e","target","files","handleSubmit","preventDefault","error","formData","FormData","append","response","post","headers","data","baplie","success","console","handleDownload","window","open","createElement","className","onSubmit","type","onChange","accept","value","placeholder","onClick"],"sources":["E:/baplie-converter/upload-baplie-ui/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\"; // Named imports\nimport \"react-toastify/dist/ReactToastify.css\";         // Import CSS for styling\nimport \"./App.css\";\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [vesselName, setVesselName] = useState(\"\");\n  const [senderName, setSenderName] = useState(\"\");\n  const [receiverName, setReceiverName] = useState(\"\");\n  const [baplieData, setBaplieData] = useState(\"\");\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!file || !vesselName || !senderName || !receiverName) {\n      toast.error(\"Please fill in all fields and upload a file!\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"vesselName\", vesselName);\n    formData.append(\"senderName\", senderName);\n    formData.append(\"receiverName\", receiverName);\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      setBaplieData(response.data.baplie);\n      toast.success(\"File uploaded successfully!\");\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Failed to upload file!\");\n    }\n  };\n\n  const handleDownload = () => {\n    window.open(\"http://localhost:5000/download\", \"_blank\");\n  };\n\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <div className=\"container\">\n        <h1>Generate BAPLIE</h1>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Upload Excel File</label>\n            <input type=\"file\" onChange={handleFileChange} accept=\".xlsx\" />\n          </div>\n          <div className=\"form-group\">\n            <label>Vessel Name</label>\n            <input\n              type=\"text\"\n              value={vesselName}\n              onChange={(e) => setVesselName(e.target.value)}\n              placeholder=\"Enter vessel name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Sender Name</label>\n            <input\n              type=\"text\"\n              value={senderName}\n              onChange={(e) => setSenderName(e.target.value)}\n              placeholder=\"Enter sender name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Receiver Name</label>\n            <input\n              type=\"text\"\n              value={receiverName}\n              onChange={(e) => setReceiverName(e.target.value)}\n              placeholder=\"Enter receiver name\"\n            />\n          </div>\n          <button type=\"submit\" className=\"btn\">Upload & Generate</button>\n        </form>\n        {baplieData && (\n          <div className=\"result\">\n            <h2>Generated BAPLIE</h2>\n            <pre>{baplieData}</pre>\n            <button onClick={handleDownload} className=\"btn download\">\n              Download Output File\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}